// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`testing component 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#eeeeee",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
        "marginHorizontal": 23.4375,
        "marginTop": 140.91549295774647,
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "marginBottom": 23.485915492957744,
          "marginHorizontal": 37.5,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#ffffff",
            "borderColor": "#E51C24",
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginRight": 9.375,
            "opacity": 1,
            "paddingBottom": 4.697183098591549,
            "paddingHorizontal": 28.125,
            "paddingTop": 4.697183098591549,
            "width": "48%",
          }
        }
      >
        <View
          style={
            Object {
              "flexDirection": "column",
              "justifyContent": "space-between",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#666666",
                "fontFamily": "BurlingamePro-CondSemiBold",
                "fontSize": 23.4375,
              }
            }
          >
            FILTERS
          </Text>
          <Text
            style={
              Object {
                "color": "#E51C24",
                "fontFamily": "BurlingamePro-CondSemiBold",
                "fontSize": 23.4375,
                "paddingTop": 4.697183098591549,
              }
            }
          >
            ALL
          </Text>
        </View>
        <View
          style={
            Object {
              "overflow": "hidden",
            }
          }
        >
          <View
            activeOpacity={0.6}
            theme={
              Object {
                "colors": Object {
                  "disabled": "hsl(208, 8%, 90%)",
                  "divider": "#bcbbc1",
                  "error": "#ff190c",
                  "grey0": "#393e42",
                  "grey1": "#43484d",
                  "grey2": "#5e6977",
                  "grey3": "#86939e",
                  "grey4": "#bdc6cf",
                  "grey5": "#e1e8ee",
                  "greyOutline": "#bbb",
                  "platform": Object {
                    "android": Object {
                      "error": "#f44336",
                      "primary": "#2196f3",
                      "secondary": "#9C27B0",
                      "success": "#4caf50",
                      "warning": "#ffeb3b",
                    },
                    "ios": Object {
                      "error": "#ff3b30",
                      "primary": "#007aff",
                      "secondary": "#5856d6",
                      "success": "#4cd964",
                      "warning": "#ffcc00",
                    },
                  },
                  "primary": "#2089dc",
                  "searchBg": "#303337",
                  "secondary": "#8F0CE8",
                  "success": "#52c41a",
                  "warning": "#faad14",
                },
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "justifyContent": "center",
                }
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": "#E51C24",
                      "fontSize": 24,
                    },
                    Object {
                      "backgroundColor": "transparent",
                    },
                    Object {
                      "fontFamily": "Entypo",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
                testID="iconIcon"
              >
                ÔÖÅ
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <RCTScrollView
      data={Array []}
      disableVirtualization={false}
      extraData={
        Object {
          "_data": Array [],
          "filterModal": false,
          "filter_value": "ALL",
          "filtersArray": Array [
            "BLACK",
            "RED",
          ],
          "local_data": Array [],
          "name": "Imdad",
          "quantity": 0,
          "total_cart_amount": 0,
        }
      }
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      style={
        Object {
          "paddingVertical": 5,
        }
      }
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View />
    </RCTScrollView>
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#aaa",
        "height": 0.7,
        "marginHorizontal": 56.25,
      }
    }
  />
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
        "marginBottom": 65.76056338028168,
        "marginHorizontal": 51.5625,
        "marginTop": 28.183098591549296,
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#333333",
            "fontFamily": "BurlingamePro-CondBold",
            "fontSize": 28.125,
          }
        }
      >
        TOTAL
      </Text>
    </View>
    <Text
      style={
        Object {
          "color": "#333333",
          "fontFamily": "BurlingamePro-CondBold",
          "fontSize": 28.125,
        }
      }
    >
      $0.00
    </Text>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "flex-end",
          "margin": 0,
          "marginHorizontal": 37.5,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#ffffff",
            "justifyContent": "center",
            "paddingTop": 9.394366197183098,
          }
        }
      >
        <Text
          style={
            Object {
              "alignSelf": "center",
              "color": "#E51C24",
              "fontFamily": "BurlingamePro-CondBold",
              "fontSize": 32.8125,
              "marginTop": 28.183098591549296,
              "paddingHorizontal": 75,
              "textAlign": "center",
            }
          }
        >
          FILTERS
        </Text>
        <View
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <RCTScrollView
            data={
              Array [
                "BLACK",
                "RED",
              ]
            }
            disableVirtualization={false}
            getItem={[Function]}
            getItemCount={[Function]}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            maxToRenderPerBatch={10}
            numColumns={1}
            onContentSizeChange={[Function]}
            onEndReachedThreshold={2}
            onLayout={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={Array []}
            style={
              Object {
                "marginTop": 18.75,
              }
            }
            updateCellsBatchingPeriod={50}
            viewabilityConfigCallbackPairs={Array []}
            windowSize={21}
          >
            <View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "height": 76.79894366197183,
                      "justifyContent": "center",
                      "opacity": 1,
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#817979",
                        "fontFamily": "BurlingamePro-CondBold",
                        "fontSize": 28.125,
                        "textAlign": "center",
                      }
                    }
                  >
                    BLACK
                  </Text>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "height": 76.79894366197183,
                      "justifyContent": "center",
                      "opacity": 1,
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#817979",
                        "fontFamily": "BurlingamePro-CondBold",
                        "fontSize": 28.125,
                        "textAlign": "center",
                      }
                    }
                  >
                    RED
                  </Text>
                </View>
              </View>
            </View>
          </RCTScrollView>
        </View>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#e3e3e3",
              "flexDirection": "row",
              "height": 93.94366197183098,
              "justifyContent": "center",
              "opacity": 1,
              "paddingLeft": 18.75,
              "paddingRight": 18.75,
              "width": "100%",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#E51C24",
                "elevation": 8,
                "fontFamily": "BurlingamePro-CondBold",
                "fontSize": 25.78125,
              }
            }
          >
            DISPLAY ALL LISTING
          </Text>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;
